[
  {
    "type" :3,
    "alphabetical": "01",
    "task_condition": "Машина заменяет в двоичной записи числа все нули на единицы и все единицы на нули.\nКаким станет выражение после двух шагов?",
    "counter_states": 4,
    "pointer_index": 0,
    "table_rules": {
      "0": ["1>2", "1>1", "1>3", "1>4"],
      "1": ["0>3", "0>1", "0<3", "0<4"],
      " ": [">3", ">4", ".0", ".0"]
    },
    "expression": {
      "-1": "1",
      "0": "1",
      "1": "0",
      "2": "1",
      "3": "0"
    },
      "answer": "00010"
  },
  {
    "type" :3,
    "alphabetical": "ab",
    "task_condition": "Дана строка, состоящая только из символов a и b. Машина переставляет последний символ в начало строки. Указатель находится над первым символом строки.\nСколько непустых символов останется на бесконечной ленте после второго шага?",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">2", ">2", "a>3"],
      "b": [">3", "b<2", "b<3"],
      " ": ["", "a.0", "b.0"]
    },
    "expression": {
      "0": "a",
      "1": "b",
      "2": "b",
      "3": "a",
      "4": "b"
    },
      "answer": "4"
  },
  {
    "type" :3,
    "alphabetical": "01",
    "task_condition": "Машина увеличивает число, записанное в двоичной системе счисления, на 1. Указатель стоит над числом.\nЗа сколько шагов программа выполнится?",
    "counter_states": 2,
    "pointer_index": 2,
    "table_rules": {
      "0": ["0>1", "1.0"],
      "1": ["1>1", "0<2"],
      " ": ["<2", "1.0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "1"
    },
      "answer": "3"
  },
  {
    "type" :3,
    "alphabetical": "01",
    "task_condition": "Даны два числа в двоичной системе счисления. Машина вычисляет сумму эти чисел.\nЧерез сколько шагов последняя цифра второго числа станет равной 0",
    "counter_states": 5,
    "pointer_index": 3,
    "table_rules": {
      "0": ["1<1", "0<2", "1>4", "0>4", ""],
      "1": ["0<2", "1<2", "0<3", "1>4", ">5"],
      "+": [">5", "+<3", "", "+>4", ""],
      " ": ["", "", "1>4", "<1", ".0"]
    },
    "expression": {
      "-4": "1",
      "-3": "0",
      "-2": "1",
      "-1": "1",
      "0": "+",
      "1": "1",
      "2": "1",
      "3": "1"
    },
      "answer": "1"
  },
  {
    "type" :3,
    "alphabetical": "ab",
    "task_condition": "Программа удаляет из слова его второй символ, если такой есть.\nЗа сколько шагов выполнится программа?",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">2", ".0", "b.0"],
      "b": [">3", "a.0", ".0"],
      " ": [".0", "a.0", "b.0"]
    },
    "expression": {
      "0": "a",
      "1": "b",
      "2": "b",
      "3": "a"
    },
      "answer": "2"
  },
  {
    "type" :3,
    "alphabetical": "abc",
    "task_condition": "Программа удаляет из слова первое вхождение символа a, если такое есть.\nКаким станет выражение после второго шага?",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">0", "b.0", "c.0"],
      "b": [">2", ">2", "c>2"],
      "c": [">3", "b>3", ">0"],
      " ": [".0", "b.0", "c.0"]
    },
    "expression": {
      "0": "b",
      "1": "c",
      "2": "b",
      "3": "a",
      "4": "a"
    },
      "answer": "bcaa"
  },
  {
    "type" :3,
    "alphabetical": "abc",
    "task_condition": "Программа вставляет символ a за его первым символом, если слово непустое.\nЗа сколько шагов выполнится программа?",
    "counter_states": 5,
    "pointer_index": 0,
    "table_rules": {
      "a": ["<2", "", "", "", ".0"],
      "b": ["<3", "", "", "", "a.0"],
      "c": ["<4", "", "", "", "a.0"],
      " ": [".0", "a>5", "b>5", "c>5", ""]
    },
    "expression": {
      "0": "b",
      "1": "c",
      "2": "a"
    },
      "answer": "3"
  },

  {
    "type" :4,
    "alphabetical": "ab",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">2", ">2", ">3"],
      "b": [">3", "b<2", "b<3"],
      " ": [".0", "a.0", "c.0"]
    },
    "expression": {
      "0": "a",
      "1": "a",
      "2": "b",
      "3": "a",
      "4": "b",
      "5": "a"
    },
    "answer": "ababa"
  },
  {
    "type" :4,
    "alphabetical": "01",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 2,
    "pointer_index": 0,
    "table_rules": {
      "0": ["0>1", "1.0"],
      "1": ["1>1", "0<2"],
      " ": ["<2", "1.0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "1"
    },
    "answer": "1110"
  },
  {
    "type" :4,
    "alphabetical": "01",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 2,
    "pointer_index": 2,
    "table_rules": {
      "0": ["0>1", "1.0"],
      "1": ["1>1", "0<2"],
      " ": ["<2", "1.0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "0",
      "1": "0",
      "2": "0"
    },
    "answer": "110001"
  },
  {
    "type" :4,
    "alphabetical": "ab",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">2", "a>2", "a>3"],
      "b": [">3", "b>2", "b>3"],
      " ": ["", "a.0", "b.0"]
    },
    "expression": {
      "0": "a",
      "1": "b",
      "2": "b",
      "3": "a",
      "4": "b"
    },
      "answer": "bbaba"
  },
  {
    "type" :4,
    "alphabetical": "bc",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 4,
    "pointer_index": 0,
    "table_rules": {
      "a": ["a>1", "a<2", "b<2", "c<2"],
      "b": ["b>1", "a<3", "b<3", "c<3"],
      "c": ["a<4", "a<4", "b<4", "c<4"],
      " ": ["<0", "a.0", "b.0", "c.0"]
    },
    "expression": {
      "0": "a",
      "1": "b",
      "2": "c",
      "3": "b",
      "4": "c"
    },
      "answer": "abcabc"
  },
  {
    "type" :4,
    "alphabetical": "01",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 2,
    "pointer_index": -1,
    "table_rules": {
      "0": ["0>2", "0<2"],
      "1": ["1>2", "1>2"],
      " ": [".2", "0>0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "1",
      "1": "1",
      "2": "1",
      "3": "0"
    },
    "answer": "11011100"
  },
  {
    "type" :4,
    "alphabetical": "012",
    "task_condition": "Каким станет выражение после выполнения программы?",
    "counter_states": 2,
    "pointer_index": 0,
    "table_rules": {
      "0": ["0.2", "1.0"],
      "1": ["1.2", "2.0"],
      " ": ["2.0", "1.0"]
    },
    "expression": {
      "-7": "1",
      "-6": "1",
      "-5": "2",
      "-4": "2",
      "-3": " ",
      "-2": " ",
      "-1": " ",
      "0": " "
    },
      "answer": "1200"
  },

  {
    "type" :5,
    "alphabetical": "01",
    "task_condition": "Машина увеличивает число, записанное в двоичной системе счисления, на 1. Указатель стоит над числом.\nЗапишите в пустой ячейке правило",
    "counter_states": 2,
    "pointer_index": 0,
    "table_rules": {
      "0": ["0>1", "1.0"],
      "1": ["", "0<2"],
      " ": ["<2", "1.0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "1"
    },
    "num_cell_row": "1",
    "num_cell_col": 0,
    "answer": "1>1"
  },
  {
    "type" :5,
    "alphabetical": "ab",
    "task_condition": "Дана строка, состоящая только из символов a и b. Машина удаляет все символы a.\nЗапишите в пустой ячейке правило, после которого машина перейдет в состояние Q2",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": ["", ">2", ">3"],
      "b": [">3", "b<2", "b<3"],
      " ": ["", "a.0", "b.0"]
    },
    "expression": {
      "0": "a",
      "1": "a",
      "2": "b",
      "3": "a",
      "4": "b"
    },
    "num_cell_row": "a",
    "num_cell_col": 0,
    "answer": ">2"
  },
  {
    "type" :5,
    "alphabetical": "ab",
    "task_condition": "Дана строка, состоящая только из символов a и b. Программа удаляет все символы a.\nЗапишите в пустой ячейке правило, после которого состояние не изменится",
    "counter_states": 3,
    "pointer_index": 0,
    "table_rules": {
      "a": [">2", ">2", ""],
      "b": [">3", "b<2", "b<3"],
      " ": ["", "a.0", "b.0"]
    },
    "expression": {
      "0": "a",
      "1": "a",
      "2": "b",
      "3": "a",
      "4": "b",
      "5": "a"
    },
    "num_cell_row": "a",
    "num_cell_col": 2,
    "answer": ">3"
  },
  {
    "type" :5,
    "alphabetical": "01",
    "task_condition": "Машина увеличивает число, записанное в двоичной системе счисления, на 1.\nЗапишите в пустой ячейке правило, после которого программа завершится",
    "counter_states": 2,
    "pointer_index": 0,
    "table_rules": {
      "0": ["0>1", ""],
      "1": ["1>1", "0<2"],
      " ": ["<2", "1.0"]
    },
    "expression": {
      "-3": "1",
      "-2": "1",
      "-1": "0",
      "0": "1"
    },
    "num_cell_row": "0",
    "num_cell_col": 1,
    "answer": "1.0"
  },
  {
    "type" :5,
    "alphabetical": "01",
    "task_condition": "Машина заменяет в двоичной записи числа все нули на единицы и все единицы на нули.\nЗапишите в пустой ячейке правило, после которого программа завершится",
    "counter_states": 2,
    "pointer_index": 0,
    "table_rules": {
      "0": ["1>2", "1>2"],
      "1": ["0>2", "0>2"],
      " ": [">1", ""]
    },
    "expression": {
      "-1": "1",
      "0": "1",
      "1": "0",
      "2": "1",
      "3": "0"
    },
    "num_cell_row": " ",
    "num_cell_col": 1,
    "answer": "10110"
  }
]